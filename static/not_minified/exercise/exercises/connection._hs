behavior ConnectionExercise
    def selectChoice(choice)
        if @exit of #exercise-options
            exit
        end
        if choice@selected
            remove @selected from choice
            remove .bg-indigo-600 .text-white from choice
            add .bg-indigo-100 .text-indigo-800 .hover:bg-indigo-200 to choice
        else 
            set choice@selected to true
            add .bg-indigo-600 .text-white to choice
            remove .bg-indigo-100 .text-indigo-800 .hover:bg-indigo-200 from choice
        end
        set selectCount to 0
        for choiceElement in document.querySelectorAll('#exercise-options button')
            if choiceElement@selected 
                set selectCount to selectCount + 1
            end
        end
        if selectCount > 4
            set choiceElement to first <button[selected]/>
            if choiceElement === choice
                set choiceElement to last <button[selected]/>
            end
            remove @selected from choiceElement
            remove .bg-indigo-600 .text-white from choiceElement
            add .bg-indigo-100 .text-indigo-800 .hover:bg-indigo-200 to choiceElement
        end
    end

    def setChoiceInfo(correctChoices)
        set #exercise-options@exit to true
        for choiceElement in document.querySelectorAll('#exercise-options button')
            remove @selected from choiceElement
            remove .bg-indigo-600 .text-white .bg-indigo-100 .text-indigo-800 .hover:bg-indigo-200 from choiceElement
            set choiceValue to @value of choiceElement
            if correctChoices contains choiceValue as Int
                add .border-green-600 .bg-green-100 to choiceElement
            else
                add .border-red-600 .bg-red-100 to choiceElement
            end
        end 
    end

    def getAnswer()
        set selectCount to 0
        set choices to []
        for choiceElement in document.querySelectorAll('#exercise-options button')
            if choiceElement@selected 
                set selectCount to selectCount + 1
                append choiceElement@value to choices
            end
        end
        if selectCount != 4
            exit
        end
        return {"choices": choices} 
    end

    def checkAnswer(url)
        call checkExercise(url, getAnswer()) then put it into exerciseResult
        call setMessageContent(exerciseResult)
        call setChoiceInfo(exerciseResult.correct_answer)
        wait 4s then call loadExercise()
    end
end