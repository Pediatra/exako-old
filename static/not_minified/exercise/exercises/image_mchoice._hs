behavior ImageMChoiceExercise
    def selectChoice(choice)
        if @exit of #exercise-options
            exit
        end
        for choiceElement in document.querySelectorAll('#exercise-options button')
            remove @selected from choiceElement
            remove .bg-indigo-300 from choiceElement
            add .hover:bg-gray-300 to choiceElement
        end
        add @selected to choice
        add .bg-indigo-300 to choice
        remove .hover:bg-gray-300 from choice
    end

    def setChoiceInfo(correctChoice)
        set #exercise-options@exit to true
        for choiceElement in document.querySelectorAll('#exercise-options button')
            remove @selected from choiceElement
            remove .bg-indigo-300 .hover:bg-indigo-100 from choiceElement
            add .hover:bg-gray-300 to choiceElement
            if @value of choiceElement == correctChoice 
                add .border-2 .border-green-400 .bg-green-100 to choiceElement
            else
                add .border-2 .border-red-400 .bg-red-100 to choiceElement
            end
        end 
    end

    def getAnswer()
        set button to the first <button[selected]/>
        if button == null
            exit
        end
        return {"term_id": @value of button} 
    end

    def checkAnswer(url)
        call checkExercise(url, getAnswer()) then put it into exerciseResult
        call setMessageContent(exerciseResult)
        call setChoiceInfo(exerciseResult.correct_answer)
        wait 4s then call loadExercise()
    end
end